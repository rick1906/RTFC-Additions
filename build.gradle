buildscript 
{
    repositories 
	{
        mavenCentral()
        maven 
		{
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven 
		{
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies 
	{
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

allprojects 
{
    apply plugin: 'java'
    apply plugin: 'forge'
    apply plugin: 'maven'
    
    group = group_name
    version = mod_version
    archivesBaseName = mod_id + "-" + minecraft_version
    
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    minecraft 
	{
        version = minecraft_version + "-" + forge_version
		
		replaceIn "Reference.java"
		replace "@MOD_VERSION@", mod_version
	
        if(file('../run').exists()) 
		{
            runDir = "../run"
        } 
		else 
		{
            runDir = ""
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs = [ 'src/main/java' , 'src/api/java' ]
        }
    }
}

repositories 
{
	maven { 
    	// The repo from which to get waila
        name "Mobius Repo"
        url "http://default.mobiusstrip.eu/maven/"
    }
    maven { 
    	// the repo from which to get NEI and stuff 
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name = "ic2, forestry"
        url = "http://maven.ic2.player.to/"
    }
    flatDir {
        dirs '../_libs'
    }
}

def commonManifest = {
    attributes 'FMLCorePlugin': 'com.rick.rtfccore.RTFCLoadingPlugin' // Allows Forge to find coremod
    attributes 'FMLCorePluginContainsFMLMod': 'true' // Without this only a coremod is loaded
}

jar {
    manifest commonManifest // Attach FMLCorePlugin attribute
}
 
dependencies 
{
	compile "codechicken:CodeChickenCore:1.7.10-1.0.4.35:dev"
	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.127:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.4.95:dev"
    compile "net.industrial-craft:industrialcraft-2:2.7.71-ex111:api"
}

//Creates a compiled de-obfuscated jar
task deobfJar(type: Jar) {
    from sourceSets.main.output
    appendix = 'deobf'
}

//creates a jar containing only the src
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    appendix = 'src'
}

//creates a jar containing only api
task apiJar(type: Jar) {
	from sourceSets.main.output
	include 'com/rick/rtfcadditions/api/**'
    appendix = 'api'
    manifest {}
}

tasks.build.dependsOn('sourceJar', 'deobfJar', 'apiJar')

processResources 
{
	inputs.property "mod_version", project.mod_version
    inputs.property "minecraft_version", project.minecraft_version
	
	from(sourceSets.main.resources.srcDirs) 
	{
        include '**/*.info'
        include '**/*.prop'

        // replaces
        expand ([
            'mod_version': project.mod_version,
            'minecraft_version': project.minecraft_version,
            ])
    }
    // copy everything else, that we didn't copy before
    from(sourceSets.main.resources.srcDirs) 
	{
        exclude '**/*.info'
        exclude '**/*.prop'
    }
}

jar {
    manifest.attributes(
		'FMLAT': 'tfc_at.cfg'
    )
}

task wrapper(type: Wrapper){
	gradleVersion = '4.4.1'
}
